{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","components/SearchContacts/SearchContacts.module.css","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.jsx","components/SearchContacts/SearchContacts.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","contacts","find","contact","alert","onSubmit","reset","className","styles","contactForm","this","type","onChange","Component","ContactsList","onDelete","map","onClick","id","SearchContacts","searchContacts","App","filter","formSubmitHandler","data","push","shortid","generate","changeFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","savedContacts","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2149098b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3CVej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsList\":\"ContactsList_ContactsList__1JXOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContacts\":\"SearchContacts_searchContacts__4B1qJ\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.props.contacts.find(contact => contact.name === this.state.name)) {\r\n      return alert(this.state.name + ' is already in contacts');\r\n    }\r\n    //При сабміті форми передвє дані в formSubmitHandler, яка в пропсах\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Number\r\n          <input\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactsList.module.css';\r\n\r\nconst ContactsList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ul className={styles.ContactsList}>\r\n      {contacts.map(contact => (\r\n        <li key={contact.id}>\r\n          {contact.name}\r\n          {': '}\r\n          {contact.number}\r\n          <button onClick={() => onDelete(contact.id)}>Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './SearchContacts.module.css';\r\n\r\nconst SearchContacts = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.searchContacts}>\r\n      Find contacts by name\r\n      <input name=\"filter\" type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\nSearchContacts.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchContacts;\r\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport SearchContacts from './components/SearchContacts/SearchContacts';\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  // Записує конткти в state з Local Storage\n  componentDidMount() {\n    const savedContacts = localStorage.getItem('contacts');\n\n    if (savedContacts) {\n      const parsedContacts = JSON.parse(savedContacts);\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  // Записує конткти в Local Storage з state\n  componentDidUpdate() {\n    const { contacts } = this.state;\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }\n\n  //Записує в contacts дані з форми\n  //прокидується як prop в ContactForm\n  formSubmitHandler = data => {\n    const { name, number } = data;\n    const { contacts } = this.state;\n\n    this.setState({ name: name, number: number });\n    contacts.push({ id: shortid.generate(), name: name, number: number });\n  };\n\n  //Записує дані з фільтру в state\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  //Повертає відфільтровані контакти (пошук)\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <ContactForm\n          onSubmit={this.formSubmitHandler}\n          contacts={this.state.contacts}\n        />\n        <h2>Contacts</h2>\n        <SearchContacts\n          value={this.state.filter}\n          onChange={this.changeFilter}\n        />\n        <ContactsList\n          contacts={this.getFilteredContacts()}\n          onDelete={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}